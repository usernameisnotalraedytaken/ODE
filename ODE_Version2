#include<bits/stdc++.h>
#define step 1e-9
#define eps 1e-11
using namespace std;
double f(double x, double y)
{
	return 4/(1 + x * x);
}
/**
x, y: Init val
h: step length.
*/
double Euler(double x, double y, double h)
{
	double Yn = y + h * f(x, y);
}
double MEuler(double x, double y, double h)
{
	double Yn = y + h * f(x + h / 2.0, y + h / 2.0 * f(x, y));
	return Yn;
}
double RK2(double x, double y, double h)
{
	double Yn = y + h / 2.0 * (f(x, y) + f(x + h, y + h * f(x, y)));
	return Yn;
}
double RK4(double x, double y, double h)
{
	double K1 = f(x, y);
	double K2 = f(x + h / 2.0, y + h / 2.0 * K1);
	double K3 = f(x + h / 2.0, y + h / 2.0 * K2);
	double K4 = f(x + h, y + h * K3);
	double Yn = y + h / 6.0 * (K1 + 2.0 * K2 + 2.0 * K3 + K4);
	return Yn;
}

double ODE(double x0, double y0, double target)
{
	double y = y0, x = x0;
	for(int i = 0; i <= (int)1e9 * target; ++i)
	{
		y = RK4(x, y, step);
		x += step;
	}
	return y;
} 

int main()
{
	printf("%.10lf", ODE(0, 0, 1));
	return 0;
}
